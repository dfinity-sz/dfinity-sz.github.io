{"title":"一文带你读懂Dfinity生态的Web身份和其验证机制","uid":"502bcca840a31be4665ba53bad4eec9f","slug":"Dfinityweb","date":"2021-05-21T07:11:00.000Z","updated":"2021-07-21T05:14:19.076Z","comments":true,"path":"static/api/articles/Dfinityweb.json","keywords":null,"cover":"https://github.com/dfinity-sz/dszimg/blob/main/webfm.png?raw=true","content":"<img src=\"https://github.com/dfinity-sz/dszimg/blob/main/DfinitySZ.jpg?raw=true\" width=\"100%\">\n\n<p>本文翻译自Dfinity Medium文章，主要介绍互联网计算机（Internet Computer）的Web身份和身份验证机制。</p>\n<p>Dfinity身份钱包，一个无需使用用户名，密码加密钥就可以体验到线上服务的世界，在这个世界不同的互联网服务可免于被追踪。本期这篇文章将带各位小伙伴了解开启Dfinity这个这个世界大门的钥匙是怎么创造出来的。</p>\n<p>我们现在使用的身份验证大多数都是通过电子邮件账号或者一串数字、一串字母，它们是将服务器上相关数据与我们的身份联系起来的唯一表示符号，我们设置的密码是身份验证的手段。从理论上讲，只有我们自己知道密码，所以服务器会将我们设置的密码与我们进行通信的手段。</p>\n<p>当我们在登录网站的输入密码的时候，计算机和手机会将密码发送到服务器，然后根据密码数据库对其进行检查，但是这种身份验证方法存在一定的问题所在，因为密码是以铭文形式存储在服务器上的，黑客可以使用一些手段来访问密码数据库。</p>\n<p>在互联网计算机上的身份验证主要是加密机制的数字签名方案，这种签名方案和我们的钱包的公钥和私钥的签名机制是一样的</p>\n<ul>\n<li><p>密钥生成，您可以将其视为选择密码的模拟。密钥生成会创建一对密钥：1）必须像密码一样将秘密密钥保密；以及2）从私有密钥派生但可以公开的公共密钥。</p>\n</li>\n<li><p>签名，它接收消息和私钥并生成签名。当我们使用数字签名进行用户身份验证时，该算法在持有私钥的用户侧运行。</p>\n</li>\n<li><p>验证，它接收消息，签名和公共密钥，并验证签名与消息和公共密钥匹配。此处的关键特性是，与检查密码（要求将秘密密码存储在服务器上）不同，在这种情况下，仅基于公共信息即可执行签名验证。服务器存储一列公用密钥，每个用户一个，并且公用密钥和签名都不必保持秘密。</p>\n</li>\n</ul>\n<p>Dfinity上的应用程序是基于通过传递消息进行交互的容器实现的。更详细地说，交互模型基于请求，这很像远程过程调用。当容器A调用容器B时，容器A指定目标容器（即容器B），它要调用的函数的名称以及该函数的参数。在容器B上评估了指定的函数时，该容器还知道该函数已被容器A调用。评估完成后，容器A获得该函数的返回值作为响应。用户与容器交互时，将应用相同的远程过程调用模型。当用户调用容器时，用户会将请求发送到目标容器。该请求还指定了带有参数的函数，并且用户获得了返回值作为响应。在更改请求期间，容器还可以了解调用它的用户的身份。</p>\n<img src=\"https://github.com/dfinity-sz/dszimg/blob/main/web1.png?raw=true\" width=\"1000px\"/>\n\n<p>上图显示了从用户发送的请求的示意图。中间的浅灰色区域显示核心请求：目标容器ID，函数名称，参数以及调用者的身份或主体。较深的灰色区域显示了包含身份验证信息，签名和公钥的信封。如左侧所示，调用者的主体是通过从公钥中散列而得出的。这项技术广泛用于区块链领域，例如比特币或以太坊地址。右侧显示了数字签名方案中作为消息的请求内容如何通过签名绑定到公钥。当Internet计算机收到这样的请求时，它会检查在指定的公共密钥下签名是否有效。</p>\n<p>为了确保消息确实是由消息中指定的呼叫者发送的，容器不必理会这些技术细节。如果一切都检查完了，则Internet计算机会评估容器上的指定功能。如果其中一项检查失败，则仅丢弃该请求。</p>\n<img src=\"https://github.com/dfinity-sz/dszimg/blob/main/web2.png?raw=true\" width=\"1000px\"/>\n\n<p>我们以DER格式的公钥开始，并使用SHA-224对其进行散列，从而得到28字节的字符串。我们附加了一个字节，该字节仅用于区分从公钥派生的主体与我们在Internet计算机的其他地方（如容器）使用的主体。这29个字节是用户主体的内部二进制表示形式。在将主体转换为其文本表示形式时，我们首先要在其前面添加CRC-32错误检测代码。然后，我们在Base32中对结果字符串进行编码，最后构建每个由五个字符组成的组，并用破折号分隔。选择该格式以支持通过适当的错误检测轻松进行复制粘贴，同时仍允许ASCII表示形式的字符数少于64个，以与Internet协议兼容。</p>\n<img src=\"https://github.com/dfinity-sz/dszimg/blob/main/web3.png?raw=true\" width=\"1000px\"/>\n\n<p>到目前为止，我们所看到的方案在构造上仍然有些僵化。它将用户的委托人绑定到单个加密密钥。这种限制使用户难以与来自不同设备的容器进行交互，因为这将需要在这些设备之间共享相同的加密密钥，从安全角度来看，这既乏味又不鼓励。相反，我们在不同的加密密钥之间使用委托。在上图中，您看到了从黄色键到橙色键的委派。这样的委派由委派的密钥（橙色的）组成；一些其他参数，例如授权范围的到期或限制；以及授权密钥的签名（黄色）。</p>\n<p>现在，当使用橙色键签署请求时，用户可以包括来自黄色键的委派，以便使用从黄色键派生的身份。代表团的特别强大之处在于可以组成代表团。例如，橙色键可以将委托扩展到紫色键。如果从公钥基础结构和X.509看似熟悉的话，这绝不是巧合-我们只是在使用更轻量级的数据结构。</p>\n<img src=\"https://github.com/dfinity-sz/dszimg/blob/main/web4.png?raw=true\" width=\"1000px\"/>\n\n<p>Web身份验证非常适合安全地存储加密密钥，但它不仅将这些密钥绑定到设备，而且还绑定到特定的容器。原因是浏览器安全模型，该模型严格按照来源来区分在同一Web浏览器中运行的不同应用程序可访问的状态。在网络上，您可以将来源视为大致对应于一个网站。在Internet计算机上，每个来源都对应一个容器。这种严格的状态分离对于安全性至关重要，但是它也使诸如密钥备份或支持从多个设备无缝访问同一容器的功能变得乏味，因为必须对每个容器分别执行所有这些操作。</p>\n<p>创建身份钱包可以在关注公众号，参考之前文章：Dfinity身份钱包使用教程完整版。</p>\n<p>Dfinity深圳社区，专注于Dfinity生态技术发展交流与优质项目挖掘分析。</p>\n","text":" 本文翻译自Dfinity Medium文章，主要介绍互联网计算机（Internet Computer）的Web身份和身份验证机制。 Dfinity身份钱包，一个无需使用用户名，密码加密钥就可以体验到线上服务的世界，在这个世界不同的互联网服务可免于被追踪。本期这篇文章将带各位小伙...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Dfinity技术","slug":"Dfinity技术","count":7,"path":"static/api/categories/Dfinity技术.json"}],"tags":[],"toc":"","author":{"name":"DfinitySZ","slug":"dfinitysz","avatar":"/static/img/sz.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"一文速览Dfinity上线12天的主要进展","uid":"b0e22ea8773fd1b880c69fae06500d80","slug":"Dfinityjz","date":"2021-05-21T07:11:00.000Z","updated":"2021-07-21T04:43:06.185Z","comments":true,"path":"static/api/articles/Dfinityjz.json","keywords":null,"cover":"https://github.com/dfinity-sz/dszimg/blob/main/jzfm.png?raw=true","text":" 今天已经5月22号了，时间转瞬即逝，在这期间区块链行业也发生了许多事情。Dfinity上线已经12天，本篇文章带大家了解一下Dfinity上线后的这段时间的主要进展。 修复神经元系统故障 其实小伙伴最关心的应该还是挖矿的事情，在Dfinity刚上线期间的时候NNS神经元系统发生...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Dfinity系列文章","slug":"Dfinity系列文章","count":20,"path":"static/api/categories/Dfinity系列文章.json"}],"tags":[],"author":{"name":"DfinitySZ","slug":"dfinitysz","avatar":"/static/img/sz.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Dfinity到底价值几何？价值体现全面分析","uid":"1045f18b0654763aaac32c2184b8df81","slug":"Dfinityjiaz","date":"2021-05-20T07:11:00.000Z","updated":"2021-07-21T05:39:54.601Z","comments":true,"path":"static/api/articles/Dfinityjiaz.json","keywords":null,"cover":"https://github.com/dfinity-sz/dszimg/blob/main/jiaz1.png?raw=true","text":" 最近几天加密货币整个市场出现了较大幅度的回调，Dfinity的主网币ICP自从上线以来，出现了较大幅度的回调。这两天Dfinity社区对ICP的价格争议不断。这篇文章将带大家从价值分析和投资布局角度走进Dfinity的世界。 先来看看Dfinity的定位。现在许多中心化应用都是...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Dfinity系列文章","slug":"Dfinity系列文章","count":20,"path":"static/api/categories/Dfinity系列文章.json"}],"tags":[],"author":{"name":"DfinitySZ","slug":"dfinitysz","avatar":"/static/img/sz.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}